name: build

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on: [push]
jobs:
  tests:
    environment: development
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: adambirds/docker-compose-action@v1.3.0
        with:
            compose-file: "./docker-compose.yml"
            down-flags: "--volumes"
            services: |
                app
                mariadb
            test-container: app
            test-command: "npm run test"
        env: 
            MYSQL_RANDOM_ROOT_PASSWORD: ${{ secrets.MYSQL_RANDOM_ROOT_PASSWORD }}
            DB_DATABASE: ${{ secrets.DB_DATABASE }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_USER: ${{ secrets.DB_USER }}
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  # lint:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: read
  #     statuses: write
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Super-linter
  #       uses: super-linter/super-linter@v5.7.2
  #       env:
  #         DEFAULT_BRANCH: main
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-docker:
    runs-on: ubuntu-latest
    needs: [tests, security]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: login to ghcr.io
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tag,labels) for docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/app
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}